--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -1539,11 +1539,6 @@ config("default_warnings") {
         # Flags NaCl (Clang 3.7) and Xcode 9.2 (Clang clang-900.0.39.2) do not
         # recognize.
         cflags += [
-          # An ABI compat warning we don't care about, https://crbug.com/1102157
-          # TODO(thakis): Push this to the (few) targets that need it,
-          # instead of having a global flag.
-          "-Wno-psabi",
-
           # TODO(https://crbug.com/989932): Evaluate and possibly enable.
           "-Wno-implicit-int-float-conversion",
 
--- a/third_party/angle/BUILD.gn
+++ b/third_party/angle/BUILD.gn
@@ -154,8 +154,6 @@ config("extra_warnings") {
       "-Wredundant-parens",
       "-Wreturn-std-move-in-c++11",
       "-Wshadow-field",
-      "-Wsuggest-destructor-override",
-      "-Wsuggest-override",
       "-Wtautological-type-limit-compare",
       "-Wundefined-reinterpret-cast",
       "-Wunneeded-internal-declaration",
--- a/third_party/dawn/src/common/BUILD.gn
+++ b/third_party/dawn/src/common/BUILD.gn
@@ -106,7 +106,6 @@ config("dawn_internal") {
       "-Winconsistent-missing-destructor-override",
       "-Winvalid-offsetof",
       "-Wmissing-field-initializers",
-      "-Wnon-c-typedef-for-linkage",
       "-Wpessimizing-move",
       "-Wrange-loop-analysis",
       "-Wreturn-std-move-in-c++11",
--- a/third_party/glslang/src/BUILD.gn
+++ b/third_party/glslang/src/BUILD.gn
@@ -234,8 +234,6 @@ template("glslang_sources_common") {
         "-Wno-missing-field-initializers",
         "-Wno-newline-eof",
         "-Wno-sign-compare",
-        "-Wno-suggest-destructor-override",
-        "-Wno-suggest-override",
         "-Wno-unused-variable",
       ]
     }
--- a/tools/gn/src/gn/visibility.cc
+++ b/tools/gn/src/gn/visibility.cc
@@ -84,7 +84,7 @@ std::unique_ptr<base::ListValue> Visibil
   auto res = std::make_unique<base::ListValue>();
   for (const auto& pattern : patterns_)
     res->AppendString(pattern.Describe());
-  return std::move(res);
+  return res;
 }
 
 // static
